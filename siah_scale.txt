//siah_scale
//An ImageJ macro to scale a folder of bmps and save as tiff stack
//Run it like this:
//java -jar /usr/share/java/ij.jar -batch /home/neil/.imagej/macros/siah_scale.txt '/home/neil/test_stack/:/home/neil/test_stack/test_stack:0.5,0.25,0.14'
//or
//Fiji --headless -batch /home/neil/harwell-ct-pipleine/siah_scale.txt '/home/neil/test_stack/:/home/neil/test_stack/test_stack:name:0.5:x1'

//Might have to specify path to macro
//args are in one string seperated by :
//Arg[0] = dir with tifs
//Arg[1] = out directory
//Arg[1....] = scale factors seperated by commas


//TODO: Can't select the window by title of the supposedly newly created window from the (Scale.. ) commannd
print("###############################");
print("siah_scale macro started");
print("###############################");


args = getArgument;
if (args=="") exit ("No argument!");

arg_array = split(args,"^");
print("input folder:");
print(arg_array[0]);

image_list = getFileList(arg_array[0]);
//Not sure what this is for
run("Close All");

setBatchMode(true);

out_path = arg_array[1];
recon_name = arg_array[2];
scale = arg_array[3];
// 1 divided by scale gives the scaling factor which the user sees, e.g 2,3,4 etc
divide_scale = arg_array[4];
new_pixel = arg_array[5];
interpolation = arg_array[6];

print("divide_scale:");
print(divide_scale);
print("new_pixel:");
print(new_pixel);
print("output folder:");
print(out_path);
print("scale factor:");
print(scale);


//open the image sequence as a stack
run("Image Sequence...", "open=[" + arg_array[0] + image_list[0] + "] file=[] or=[] sort use");
rename("unscaled");
//run('Nrrd ... ', "nrrd=" + "/home/neil/test/test.nrrd");


//Set number of images in stack
zdepth = floor(image_list.length * scale);



//run the scaling in the x, y and z dimensions
// interpolation is bicubic if requested
if (interpolation=="yes") {
	print("Interpolation:");
	print("Bicubic");
	run("Scale...", "x=" + scale + " y=" + scale +  " z=" + zdepth + " depth=" + zdepth + "interpolation=Bicubic average process create title=scaled");
} else {
	print("Interpolation:");
	print("default");
	run("Scale...", "x=" + scale + " y=" + scale +  " z=" + zdepth + " depth=" + zdepth + " average process create title=scaled");
}
full_file_name = out_path+recon_name+"_scaled_"+divide_scale+"_pixel_"+new_pixel+".tif";


//Create directory (this is now done in python
//File.makeDirectory(out_path + divide_scale);

saveAs("Tiff", full_file_name);
print("Scaling Finished");


