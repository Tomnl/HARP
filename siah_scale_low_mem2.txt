//siah_scale
//An ImageJ macro to scale a folder of bmps and save as tiff stack
//Run it like this:
//java -jar /usr/share/java/ij.jar -batch /home/neil/.imagej/macros/siah_scale.txt '/home/neil/test_stack/:/home/neil/test_stack/test_stack:0.5,0.25,0.14'
//or
//Fiji --headless -batch /home/neil/harwell-ct-pipleine/siah_scale.txt '/home/neil/test_stack/:/home/neil/test_stack/test_stack:name:0.5:x1'

//Might have to specify path to macro
//args are in one string seperated by :
//Arg[0] = dir with tifs
//Arg[1] = out directory
//Arg[1....] = scale factors seperated by commas


//TODO: Can't select the window by title of the supposedly newly created window from the (Scale.. ) commannd
print("###############################");
print("siah_scale macro low memory part 2");
print("###############################");


args = getArgument;
if (args=="") exit ("No argument!");

arg_array = split(args,"^");

//Not sure what this is for
run("Close All");
setBatchMode(true);


temp_name = arg_array[0];
scale = arg_array[1];
interpolation = arg_array[2];
full_file_name = arg_array[3];
file_num = arg_array[4];

print("Temp stack:");
print(temp_name);
print("Scale factor:");
print(scale);
print("interpolation:");
print(interpolation);
print("full_file_name:");
print(full_file_name);


//open the image sequence as a stack
print("reading image in");
image_list = getFileList(temp_name);

run("Image Sequence...", "open=[" + temp_name + image_list[0] + "] file=[] or=[] sort use");
rename("unscaled");


//Set number of images in stack
zdepth = floor(image_list.length * scale);

//run the scaling in the x, y and z dimensions
print("performing scaling");

// interpolation is bicubic if requested
if (interpolation=="yes") {
	print("Interpolation:");
	print("Bicubic");
	run("Scale...", "z=" + scale + " depth=" + zdepth + " create interpolation=Bicubic average process title=scaled");

} else {
	print("Interpolation:");
	print("default");
	run("Scale...",  " z=" + scale + " depth=" + zdepth + " create average process title=scaled");

}

print("saving file");
saveAs("Tiff", full_file_name);
print("Scaling Finished");


